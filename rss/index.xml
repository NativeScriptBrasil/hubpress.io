<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[NativeScript Brasil]]></title><description><![CDATA[Comunidade brasileira sobre NativeScript]]></description><link>https://nativescriptbrasil.github.io</link><generator>RSS for Node</generator><lastBuildDate>Sun, 19 Mar 2017 21:43:41 GMT</lastBuildDate><atom:link href="https://nativescriptbrasil.github.io/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[UI Layouts no NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Se você está começando agora a mexer com NativeScript, é bom entender o que é possível fazer na parte visual, no UI do aplicativo.</p>
</div>
<div class="paragraph">
<p>Aproveitando, não deixe de ler o primeiro artigo de <a href="https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html">Imersão NativeScript</a> que o Douglas está escrevendo.</p>
</div>
<div class="paragraph">
<p>O NativeScript possui 6 tipos de layouts predefinidos que vai ajudar a organizar o visual do seu aplicativo. Esses layouts, na verdade, são marcações inseridas no html dos componentes de um aplicativo, e também podem ser criados usando os módulos de cada um diretamente no componente (no arquivo js ou ts).</p>
</div>
<div class="paragraph">
<p>Aqui vou mostrar exemplos de escrita no HTML, que é mais comum.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_stacklayout">StackLayout</h3>
<div class="paragraph">
<p>Talvez esse seja o que layout que será mais usado. Ele faz o básico, que é colocar em pilha (stack) os elementos na view, ou seja, se você precisa mostrar elementos um embaixo do outro, como campos de formulário, esse é o layout que deverá ser utilizado.</p>
</div>
<div class="paragraph">
<p>Para quem vem do HTML e CSS, podemos dizer que é como deixar todos os elementos dentro do container com um <strong>display:block</strong>.
É possível usar um atributo <em>orientation</em> para organizar os elementos na horizontal. Basta atribuir o valor do atributo para <em>horizontal</em>.
Um exemplo:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;StackLayout&gt;
    &lt;Label text="Nome" /&gt;
    &lt;TextField hint="Digite o nome" /&gt;
    &lt;Label text="E-mail" /&gt;
    &lt;TextField hint="Digite o e-mail" /&gt;
&lt;/StackLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_gridlayout">GridLayout</h3>
<div class="paragraph">
<p>Define áreas em colunas e linhas, ou seja, na tag GridLayout você define <em>columns</em> e <em>rows</em> em que os elementos internos irão se posicionar. Em cada elemento, é adicionado um atributo <em>col</em> e/ou <em>row</em> para deixar o elemento no lugar certo.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;GridLayout columns="60, auto" rows="auto, *" &gt;
    &lt;Label text="Coluna 0 - Linha 0" col="0" /&gt;
    &lt;Label text="Coluna 1 - Linha 0" col="1" /&gt;
    &lt;Label text="Coluna 0 - Linha 1" col="0" row="1" /&gt;
    &lt;Label text="Coluna 1 - Linha 1" col="1" row="1" /&gt;
&lt;/GridLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_wraplayout">WrapLayout</h3>
<div class="paragraph">
<p>Esse layout posiciona os elementos internos em colunas ou linhas, dependendo da definição da propriedade orientation, que pode ser <em>vertical</em> ou <em>horizontal</em>, por padrão o valor é <em>horizontal</em>.</p>
</div>
<div class="paragraph">
<p>O WrapLayout lembra um pouco o StackLayout, posicionando elementos na horizontal ou vertical. A diferença é que o StackLayout não faz quebras de linhas ou colunas. O WrapLayout, quando tem a propriedade <em>orientation</em> como <em>horizontal</em>, quebra a linha quando o elemento não cabe mais na tela. Se a propriedade estiver com o valor <em>vertical</em>, ele cria colunas quando o elemento chega no final da tela.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;WrapLayout orientation="vertical"&gt;
    &lt;Label text="Elemento 1" /&gt;
    &lt;Label text="Elemento 2" /&gt;
    &lt;Label text="Elemento 3" /&gt;
    &lt;Label text="Elemento 4" /&gt;
    &lt;Label text="Elemento 5" /&gt;
    &lt;Label text="Elemento 6" /&gt;
    &lt;Label text="Elemento 7" /&gt;
    &lt;Label text="Elemento 8" /&gt;
    &lt;Label text="Elemento 9" /&gt;
&lt;/WrapLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_docklayout">DockLayout</h3>
<div class="paragraph">
<p>Esse layout posiciona os elementos internos nas bordas do DockLayout. Para isso, cada elemento recebe um atributo dock, que pode ter os valores <em>top, right, bottom e left</em>. Você pode adicionar um elemento sem o atributo dock e ele ficará posicionado no espaço que sobrar no meio do layout.</p>
</div>
<div class="paragraph">
<p>Caso queira que o último elemento ocupe todo o espaço restante, existe a propriedade <em>stretchLastChild</em> para a tag DockLayout. Essa propriedade recebe um valor true/false. Se true, ele vai pegar o último elemento e esticar até ocupar o espaço vazio.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;DockLayout stretchLastChild="true"&gt;
    &lt;Button dock="left" text="1" style="background-color: red; margin: 5;" /&gt;
    &lt;Button dock="top" text="2" style="background-color: green; margin: 5;" /&gt;
    &lt;Button dock="right" text="3" style="background-color: blue; margin: 5;" /&gt;
    &lt;Button dock="bottom" text="4" style="background-color: yellow; margin: 5;" /&gt;
    &lt;Button text="ocupa espaço" style="background-color: black; margin: 5;" /&gt;
&lt;/DockLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_absolutelayout">AbsoluteLayout</h3>
<div class="paragraph">
<p>Fazendo uma analogia com o CSS, é como fosse usado o <strong>position:absolute</strong> nos elementos internos. Bem simples, cada elemento interno recebe os atributos <em>left</em> e <em>top</em>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;AbsoluteLayout&gt;
    &lt;Label text="Posição 0 left e 70 top" left="0" top="70" /&gt;
    &lt;Label text="Posição 10 left e 100 top" left="10" top="100" /&gt;
&lt;/AbsoluteLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_flexboxlayout">FlexboxLayout</h3>
<div class="paragraph">
<p>O layout FlexboxLayout merece um post para falar sobre ele. Basicamente, ele funciona como o <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS flexbox</a>. A documentação no NativeScript deixar até como referência <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">esse link</a>, porque eles traduzem as propriedades do CSS para propriedades que funcionam em um código xml ou js do NativeScript.</p>
</div>
<div class="paragraph">
<p>A tag FlexboxLayout é como se fosse um div com <strong>display:flex</strong>. Então, nos elementos internos, você precisa definir os espaços, as colunas, o posicionamento, como se fosse no css.</p>
</div>
</div>
<div class="sect1">
<h2 id="_propriedades">Propriedades</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Para finalizar, todas essas tags de layouts possuem algumas propriedades:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>width</p>
</li>
<li>
<p>height</p>
</li>
<li>
<p>minWidth</p>
</li>
<li>
<p>minHeight</p>
</li>
<li>
<p>visibility</p>
</li>
<li>
<p>marginTop</p>
</li>
<li>
<p>marginRight</p>
</li>
<li>
<p>marginBottom</p>
</li>
<li>
<p>marginLeft</p>
</li>
<li>
<p>horizontalAlignment</p>
</li>
<li>
<p>verticalAlignment</p>
</li>
</ul>
</div>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/19/ui-layouts-no-nativescript.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/19/ui-layouts-no-nativescript.html</guid><category><![CDATA[Layout]]></category><category><![CDATA[ UI]]></category><dc:creator><![CDATA[Alex Hiroshi]]></dc:creator><pubDate>Sun, 19 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Imersão NativeScript #1 - Instalando o NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Este é o primeiro de uma série de artigos que irei lançar nas próximas semanas onde irei abordar a criação de um projeto em NativeScript com Angular 2 desde o inicio, desde a instalação, criação, melhores práticas e muito mais.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_instalando_nativescript">Instalando NativeScript</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_windows">Windows</h3>
<div class="paragraph">
<p>Se você estiver no Windows, você pode optar por utilizar o instalador oficial do <strong>NativeScript</strong> atravéz o seguinte link:
<a href="https://docs.nativescript.org/start/ns-setup-installer" class="bare">https://docs.nativescript.org/start/ns-setup-installer</a></p>
</div>
<div class="paragraph">
<p>O instalador irá realizar toda a configuração do ambiente necessária para desenvolvimento com Android (já que para desenvolver para iOS você precisa de um Mac). Se preferir, você pode acessar o guia avançado de instalação para Windows <a href="https://docs.nativescript.org/start/ns-setup-win">clicando aqui</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_mac">Mac</h3>
<div class="ulist">
<ul>
<li>
<p>Instale o Node:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>brew install node</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o NativeScript:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install -g nativescript</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configurar o Android e iOS SDK</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Agora precisamos configurar o ambiente para desenvolver para Android e iOS. Existe um script oficial da Telerik onde é realizada a instalação completa executando o seguinte comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>ruby -e "$(curl -fsSL https://www.nativescript.org/setup/mac)"</pre>
</div>
</div>
<div class="paragraph">
<p>O processo de instalação pode demorar alguns minutos, seja paciente. Se preferir, você pode consultar o <a href="https://docs.nativescript.org/start/ns-setup-os-x">manual de instalação completo para macOS clicando aqui.</a></p>
</div>
</div>
<div class="sect2">
<h3 id="_linux">Linux</h3>
<div class="ulist">
<ul>
<li>
<p>Instale o node:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 libstdc++6:i386</pre>
</div>
</div>
<div class="paragraph">
<p>se o comando anterior estourar o erro <code>Unable to locate package lib32bz2-1.0</code>, então use este comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install lib32z1 lib32ncurses5 libbz2-1.0:i386 libstdc++6:i386</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o G++ compiler:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install g++</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o JDK 8:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install python-software-properties
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configure o JAVA:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo update-alternatives --config java</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configure a variavel de ambiente <strong>JAVA_HOME</strong></p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>export JAVA_HOME=$(update-alternatives --query javac | sed -n -e 's/Best: *\(.*\)\/bin\/javac/\1/p')</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o Android SDK
Acesse o link abaixo, navegue até a seção de downloads para linux e realize o download:
<a href="https://developer.android.com/sdk/index.html#Other" class="bare">https://developer.android.com/sdk/index.html#Other</a></p>
</li>
<li>
<p>Configure a variavel de ambiente <strong>ANDROID_HOME</strong>
Após a instalação do Android SDK, execute o comando:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>export ANDROID_HOME=Path to Android installation directory</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale os pacotes necessarios para o ambiente de desenvolvimento Android:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo $ANDROID_HOME/tools/android update sdk --filter tools,platform-tools,android-23,build-tools-23.0.3,extra-android-m2repository,extra-google-m2repository,extra-android-support --all --no-ui</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o CLI do NativeScript</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo npm install nativescript -g --unsafe-perm</pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_verificando_o_status_da_instala_o">Verificando o status da Instalação</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Após a instalação do NativeScript, você terá acesso ao CLI (command line interface). Confira se tudo esta certo executando o seguinte comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>tns doctor</pre>
</div>
</div>
<div class="paragraph">
<p>o resultado deverá ser o seguinte:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>λ tns doctor

┌──────────────┬─────────────────┬────────────────┬──────────────────┐
│ Component    │ Current version │ Latest version │ Information      │
│ nativescript │ 2.5.1           │ 2.5.2          │ Update available │
└──────────────┴─────────────────┴────────────────┴──────────────────┘</pre>
</div>
</div>
<div class="sect2">
<h3 id="_pr_ximos_passos">Próximos passos</h3>
<div class="paragraph">
<p>Agora que você tem um ambiente configurado, você está apto a desenvolver em NativeScript utilizando JavaScript, TypeScript ou Angular 2.
Na próximo artigo irei iniciar um projeto do zero em Angular 2 e iremos abordar diversos temas sobre o <strong>NativeScript</strong>.</p>
</div>
</div>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html</guid><category><![CDATA[Curso]]></category><category><![CDATA[ NativeScript]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Tue, 14 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[10 motivos para optar por NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Apesar de novo, o <a href="http://nativescript.org/">framework</a> vem demonstrando sua força a cada atualização. Nesse artigo demonstro algumas motivos de porque escolhe-lo.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_1_open_source">1: Open Source</h3>
<div class="paragraph">
<p>Não poderia começar por outro ponto que não este. O <strong>NativeScript</strong> é totalmente open source, o repositório do projeto pode ser acessado atravéz o link <a href="https://github.com/NativeScript" class="bare">https://github.com/NativeScript</a>. O projeto possui uma comunidade muito ativa, por diversas vezes que precisei abrir uma issue, em poucas horas obtive respostas de membros da propria equipe do projeto, bem como demais usuários.</p>
</div>
</div>
<div class="sect2">
<h3 id="_2_mantido_pela_telerik">2: Mantido pela Telerik</h3>
<div class="imageblock">
<div class="content">
<img src="http://lrdnug.org/images/logos/telerik_new-logo.png" alt="telerik new logo.png">
</div>
</div>
<div class="paragraph">
<p>Esse foi um dos motivos que me levou a escolher o <strong>NativeScript</strong> quando estava estudando sobre frameworks para desenvolvimento de aplicativos móveis: <em>Ser mantido pela Telerik</em>. Telerik é uma empresa búlgara criada em 2002 e se destaca por desenvolver ferramentas poderosas para desenvolvedores, como Fiddler, Telerik Reporting, JustCode, Kendo UI, entre outros. Ferramentas estas que não são acessíveis para todos, pois possuem licenças caríssimas, entretanto para o <strong>NativeScript</strong>, eles adotaram uma maneira de monetizar o negócio diferente, a exemplo do que vem fazendo a Microsoft com seus produtos, a Telerik oferece o <strong>NativeScript</strong> totalmente gratuito, e caso você desejar, pode contar com um suporte técnico da empresa e ferramentas exclusivas como o <strong>NativeScript-UI</strong> (componentes extras para interfaces) adquirindo uma licença premium.</p>
</div>
</div>
<div class="sect2">
<h3 id="_3_web_skills_javascript_e_css">3: Web Skills: JavaScript e CSS</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.ibb.co/hcbXwF/Screenshot_90.png" alt="Screenshot 90.png">
</div>
</div>
<div class="paragraph">
<p>Ao iniciar um projeto em <strong>NativeScript</strong> você tem a opção de escolher 3 arquiteturas para o projeto: <strong>JavaScript</strong>, <strong>TypeScript</strong> ou <strong>Angular2</strong>. Além disso, você poderá contar com o <strong>CSS</strong> para a interface. Não são todas as propriedades do CSS que temos ao desenvolver para web, até por que não temos DOM para manipular já que são elementos puramente nativos, você pode acessar a lista completa <a href="https://docs.nativescript.org/ui/styling#supported-css-properties">clicando aqui</a>. De modo geral, você irá reaproveitar todo seu conhecimento em desenvolvimento para web, ao desenvolver com <strong>NativeScript</strong>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_4_multi_plataforma">4: Multi-plataforma</h3>
<div class="imageblock">
<div class="content">
<img src="https://adtmag.com/~/media/ECG/redmondmag/Images/introimages/REDMackie0613AndroidiOS_v2.jpg" alt="REDMackie0613AndroidiOS v2.jpg">
</div>
</div>
<div class="paragraph">
<p>Um dos slogans do <strong>NativeScript</strong> é <em>"write once, run everywhere"</em> (escreva uma vez, rode em qualquer lugar). Com o <strong>NativeScript</strong> você terá um unico projeto escrito em JavaScript servindo diferentes plataformas (Android e iOS).</p>
</div>
</div>
<div class="sect2">
<h3 id="_5_componentes_nativos">5: Componentes nativos</h3>
<div class="imageblock">
<div class="content">
<img src="http://www.hybridtonative.com/images/nativescript-theme.png" alt="nativescript theme.png">
</div>
</div>
<div class="paragraph">
<p>As interfaces do <strong>NativeScript</strong> são escritas em XML, não temos HTML, não há DOM, o NativeScript entrega para você componentes realmente nativos, por conta disso o ganho em performance é elevado em comparação a outros frameworks</p>
</div>
</div>
<div class="sect2">
<h3 id="_6_sem_compila_o">6: Sem compilação</h3>
<div class="imageblock">
<div class="content">
<img src="https://superdevresources.com/wp-content/uploads/2014/06/cross-platform-app-development-telerik-nativescript.png" alt="cross platform app development telerik nativescript.png">
</div>
</div>
<div class="paragraph">
<p>O <strong>NativeScript</strong> não compila nenhum código. O código que você escreve em JavaScript é entregue integralmente no dispositivo. O <strong>NativeScript</strong> lhe da acesso integral a VM JavaScript do dispositivo (V8 no android e JavaScriptCore no iOS). Por conta disso, desenvolver em <strong>NativeScript</strong> se torna muito mais atrativo, pois você tem um ambiente mais fluido, sem pausas para recompilar, e também graças ao <strong>livesync</strong> que você pode utilizar enquanto está desenvolvendo, onde o aplicativo é atualizado automaticamente a cada mudança no código. Falarei mais sobre esse assunto em outra oportunidade.</p>
</div>
</div>
<div class="sect2">
<h3 id="_7_vasta_op_es_de_pacotes">7: Vasta opções de pacotes</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.ibb.co/gHEViv/npmcocoapodgradle.png" alt="npmcocoapodgradle.png">
</div>
</div>
<div class="paragraph">
<p>Você poderá utilizar a maioria dos pacotes NPM que você ja utiliza para desenvolver para web, também no <strong>NativeScript</strong> (desde que este não dependa de DOM). No momento em que escrevo esse artigo existem cerca de 466 pacotes exclusivos para <strong>NativeScript</strong> no <a href="https://www.npmjs.com/search?q=nativescript">repositório NPM</a>. E não é só isso, caso você
deseje, poderá utilizar também pacotes dos repositórios cocoapods e gradle, e reaproveitar pacotes nativos de cada plataforma, também no <strong>NativeScript</strong>. Isso é muito útil para quem ja desenvolve apps em JAVA ou Object-C e já tenha experiência com alguns pacotes em cada plataforma.</p>
</div>
</div>
<div class="sect2">
<h3 id="_8_depura_o_de_c_digo">8: Depuração de Código</h3>
<div class="imageblock">
<div class="content">
<img src="https://i.ytimg.com/vi/KQHJewS3tqA/maxresdefault.jpg" alt="maxresdefault.jpg">
</div>
</div>
<div class="paragraph">
<p>O <strong>NativeScript</strong> possui extensões para o Visual Studio Code, Web Storm para debugar o código durante o desenvolvimento. E na ultima atualização (versão 2.5.0) foi entregue suporte para utilizar o Chrome Developer Tools para debugar também. Isso tornará o ambiente de desenvolvimento mais produtivo.</p>
</div>
</div>
<div class="sect2">
<h3 id="_9_100_de_acesso_as_api_s_nativas">9: 100% de acesso as API&#8217;s nativas</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.slidesharecdn.com/nativescriptlondonmobiledev-150109075452-conversion-gate02/95/native-script-by-sebastian-witalec-8-638.jpg?cb=1420811743" alt="native script by sebastian witalec 8 638.jpg?cb=1420811743">
</div>
</div>
<div class="paragraph">
<p>Esse sem sombra de dúvidas é o que faz com que o <strong>NativeScript</strong> se destaque perante os concorrentes. Tanto no ReactNative como no Xamarin por exemplo, você tem acesso limitado as API&#8217;s nativas, o que esses frameworks fazem é encapsular a API nativa, uma por uma, e te entregar o acesso atravéz o código o framework, como um atalho. No <strong>NativeScript</strong> isso não ocorre, você tem acesso integral a API do dispositivo, como uma ponte direta a engine. Você não precisa escrever JAVA ou Object-C, você tem acesso integral atravéz JavaScript. Outro ponto positivo em ter acesso direto a API do dispositivo, é em questão de atualizações. Se o Android lançar uma SDK nova por exemplo, você poderá utilizar sem maiores dificuldades, bastanto apenas atualizar sua suite de desenvolvimento, no caso do Xamarin ou ReactNative, você teria que esperar sair uma atualização do framework.</p>
</div>
</div>
<div class="sect2">
<h3 id="_10_atualiza_es_frequentes_muita_novidade">10: Atualizações frequentes, muita novidade</h3>
<div class="imageblock">
<div class="content">
<img src="http://www.heliosdesign.co.za/export/sites/helios/blog/images3/update-frequently.jpg" alt="update frequently.jpg">
</div>
</div>
<div class="paragraph">
<p>Se você acompanhar o projeto no <a href="https://github.com/nativescript/">github</a> verá que a equipe de desenvolvimento não para. É atualização atraz de atualização, a versão <a href="https://www.nativescript.org/blog/nativescript-25-is-now-available">2.5.0</a> mal foi entregue, recheada de recursos novos e melhorias, e a Telerik já soltou notícias de um <a href="https://www.nativescript.org/blog/sneak-preview-of-nativescript-3.0"><em>major update</em> para 3.0</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_destaques_da_ltima_vers_o">Destaques da última versão</h3>
<div class="ulist">
<ul>
<li>
<p>Suporte para o Chrome Developer Tools</p>
</li>
<li>
<p>Melhorias no CLI</p>
</li>
<li>
<p>Atualização na extensão para Visual Studio Code</p>
</li>
<li>
<p><a href="http://www.telerik.com/nativescript-ui">Novos componentes no NativeScript UI</a></p>
</li>
<li>
<p><a href="https://webpack.github.io/">Suporte ao Webpack Module Bundler</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_o_que_vem_por_ai">O que vem por ai</h3>
<div class="paragraph">
<p>Muito rumor ainda paira sobre a versão 3.0, mas a equipe Telerik já deu algumas dicas de que vem coisa grande por ai. Estão reestruturando a arquitetura do NativeScript para torna-lo ainda mais rapido, em alguns testes <a href="https://www.nativescript.org/blog/sneak-preview-of-nativescript-3.0">resultaram em um ganho de performance de até 400%</a>, e não é só isso, estão ampliando o acesso as funcionalidades do Chrome Dev Tools, melhorias no minificador WebPack e um instalador novo para quem não se sentir confortavel em usar linha de comando.</p>
</div>
</div>
<div class="sect2">
<h3 id="_conclus_o">Conclusão</h3>
<div class="paragraph">
<p>O objetivo desse artigo foi fazer um panorama sobre o NativeScript e seus benefícios. A curva de aprendizado é baixíssima, visto que você reaproveitará grande parte do seu conhecimento em desenvolvimento para Web.
Nas próximas semanas irei lançar conteúdos sobre o <strong>NativeScript</strong> e espero que possamos juntos enriquecer esse portal com material de qualidade para todos os níveis.</p>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/11/Por-que-escolher-Native-Script.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/11/Por-que-escolher-Native-Script.html</guid><category><![CDATA[Blog]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[NativeScript Brasil]]></title><description><![CDATA[<div class="sect2">
<h3 id="_comunidade_brasileira_sobre_nativescript">Comunidade brasileira sobre NativeScript.</h3>
<div class="paragraph">
<p>Grupo criado com o intuito de reunir artigos, materiais e projetos sobre NativeScript para a comunicade de desenvolvedores brasileiros.</p>
</div>
<div class="paragraph">
<p>Em breve novidades, acompanhe-nos nas redes sociais:</p>
</div>
<div class="paragraph">
<p><a href="https://www.facebook.com/groups/nativescriptbrasil/?ref=br_rs">Facebook</a></p>
</div>
<div class="paragraph">
<p><a href="https://www.youtube.com/channel/UChXJEo5jpog58CvymfAJgMQ">Youtube</a></p>
</div>
<div class="paragraph">
<p><a href="https://github.com/NativeScriptBrasil">Github</a></p>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/10/Native-Script-Brasil.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/10/Native-Script-Brasil.html</guid><category><![CDATA[NativeScript]]></category><category><![CDATA[ Blog]]></category><category><![CDATA[ Novidades]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 GMT</pubDate></item></channel></rss>