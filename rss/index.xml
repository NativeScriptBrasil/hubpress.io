<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[NativeScript Brasil]]></title><description><![CDATA[Comunidade brasileira sobre NativeScript]]></description><link>https://nativescriptbrasil.github.io</link><generator>RSS for Node</generator><lastBuildDate>Fri, 14 Jul 2017 18:01:48 GMT</lastBuildDate><atom:link href="https://nativescriptbrasil.github.io/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[O que √© NativeScript e a compara√ß√£o com Xamarin, Ionic e React]]></title><description><![CDATA[<div class="paragraph">
<p>Video introdut√≥rio sobre NativeScript e as principais diferen√ßas entre Xamarin, Ionic e React.</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/_cWfz1d2XLw?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/07/14/O-que-e-Native-Script-e-a-comparacao-com-Xamarin-Ionic-e-React.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/07/14/O-que-e-Native-Script-e-a-comparacao-com-Xamarin-Ionic-e-React.html</guid><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Fri, 14 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Qu√£o facil √© criar um plugin para NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>√â not√≥rio a crescente quantidade de plugins dispon√≠veis para NativeScript desenvolvidos pela comunidade, e o motivo disso n√£o √© apenas a boa vontade e senso de contribui√ß√£o por parte de quem desenvolve, e sim, inclusive, a <strong>facilidade que √© desenvolver um plugin para NativeScript</strong>, principalmente depois da vers√£o 3.0.</p>
</div>
<div class="paragraph">
<p>Neste artigo, irei demonstrar como desenvolvi o <strong><a href="https://github.com/dzfweb/nativescript-emoji">NativeScript Emoji</a></strong>, meu primeiro  UI Plugin para NativeScript. Ao termino da leitura deste artigo, espero despertar em voc√™ o interesse em desenvolver tamb√©m um plugin e contribuir para a comunidade de desenvolvedores NativeScript, quem ganha com isso somos n√≥s mesmos.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_por_onde_come_ar">Por onde come√ßar?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>N√£o vou entrar em detalhes sobre toda a estrutura necessaria para desenvolver um plugin para NativeScript pois isso n√£o vai ser necess√°rio para este artigo. Vou demonstrar o basico que voc√™ precisa saber para come√ßar, mas caso prefira, a documenta√ß√£o completa voc√™ pode acessar <a href="https://docs.nativescript.org/plugins/plugins">clicando aqui</a>.</p>
</div>
<div class="paragraph">
<p>A maneira mais facil de come√ßar um plugin para NativeScript, √© utilizando o  <strong><a href="https://github.com/NathanWalker/nativescript-plugin-seed">NativeScript Plugin Seed</a></strong>, criado por NathanWalker. Esta biblioteca far√° todo o trabalho √°rduo de cria√ß√£o da estrutura de um plugin NativeScript, e isso √© realmente incr√≠vel. Veja como √© facil:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>git clone <a href="https://github.com/NathanWalker/nativescript-plugin-seed.git" class="bare">https://github.com/NathanWalker/nativescript-plugin-seed.git</a> myplugin</p>
</li>
<li>
<p>cd myplugin</p>
</li>
<li>
<p>npm run postclone</p>
</li>
<li>
<p>npm run setup</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Pronto, com apenas estas etapas voc√™ ter√° criado toda estrutura necess√°ria para desenvolver, testar e publicar seu plugin, mas antes de por a m√£o na massa, vamos fazer uma breve introdu√ß√£o sobre o plugin que vamos desenvolver juntos neste artigo.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_o_plugin_nativescript_emoji">O plugin NativeScript Emoji</h2>
<div class="sectionbody">
<div class="paragraph">
<p>O objetivo deste plugin √© entregar um elemento para a interface para exibir Emojis de forma amigavel. A minha ideia inicial era ter um elemento TextView onde ao definir o valor unicode ou hexadecimal do emoji na propriedade correspondente:</p>
</div>
<div class="paragraph">
<p><code>&lt;Emoji:Emoji icon="128514"&gt;</code> <strong>exibir</strong> :üòÇ</p>
</div>
<div class="paragraph">
<p>O plugin faria a convers√£o para Emoji, e aqui eu deixo um destaque novamente para a comunidade NativeScript no Slack (se voc√™ ainda n√£o participa, fa√ßa sua inscri√ß√£o agora <a href="http://developer.telerik.com/wp-login.php?action=slack-invitation">clicando aqui</a>), que me fizeram uma excelente sugest√£o de substituir a propriedade unicode por um valor amigavel e mais facil de lembrar, ficando ent√£o:</p>
</div>
<div class="paragraph">
<p><code>&lt;Emoji:Emoji name="joy"&gt;</code> <strong>exibir</strong> :üòÇ</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_implementa_o_para_android_e_ios">Implementa√ß√£o para Android e iOS</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Agora que j√° temos a defini√ß√£o do plugin e a estrutura criada, √© hora de por a m√£o na massa. A primeira coisa que precisamos fazer √© definir a implementa√ß√£o comum entre as plataformas, sabemos que iremos ter uma propriedade <strong>name</strong> que servir√° tanto para Android como para iOS, esta defini√ß√£o √© feita no arquivo common que foi gerado na primeira etapa deste artigo.</p>
</div>
<div class="paragraph">
<p><strong>emoji.common.ts</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>import { View, Property } from "ui/core/view";

export class EmojiCommon extends View {
  name: string;
}

export const nameProperty = new Property&lt;EmojiCommon, string&gt;(
  {
    name: "name",
    defaultValue: ""
  });
nameProperty.register(EmojiCommon);</code></pre>
</div>
</div>
<div class="paragraph">
<p>Como se trata de um plugin para interface, precisamos extender a classe <strong>View</strong>. Os atributos do elemento que iremos criar, definimos criando um novo objeto do tipo <strong>Property</strong>, a propriedade <strong>name</strong> definimos o nome do atributo e o valor padr√£o, como o pr√≥prio nome sugere, definimos na propriedade <strong>defaultValue</strong>. Se o valor deste atributo fosse diferente do tipo <strong>string</strong>, que n√£o √© o nosso caso, seria necess√°rio definir o valor para a propriedade <strong>valueConverter</strong>.</p>
</div>
<div class="paragraph">
<p>A codifica√ß√£o dos emojis s√£o distintas para cada plataforma, por tanto precisamos ter uma base de dados para armazenar esses valores para consultarmos durante a execu√ß√£o do plugin.</p>
</div>
<div class="paragraph">
<p><strong>emoji.database.ts</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>export class EmojiDatabase {
    public static list(): Array&lt;any&gt; {
      return [
    {
        "name": "FACE WITH TEARS OF JOY",
        "unicode": "üòÇ",
        "hexcode": "1F602",
        "codepoint": [
            128514
        ],
        "shortname": "joy"
    }];
}</code></pre>
</div>
</div>
<div class="sect2">
<h3 id="_implementa_o_para_android">Implementa√ß√£o para Android</h3>
<div class="paragraph">
<p>Agora que ja temos os atributos do elemento que iremos criar, precisamos implementar o codigo respons√°vel por gerar o elemento correspondente a cada plataforma. O NativeScript interpretar√° em tempo de execu√ß√£o o codigo espec√≠fico para Android atrav√©z do seguinte arquivo.</p>
</div>
<div class="paragraph">
<p><strong>emoji.android.ts</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>import { nameProperty, EmojiCommon } from "./emoji.common";
import { EmojiDatabase } from "./emoji.database";
import * as utils from "tns-core-modules/utils/utils";
declare var java: any;

global.moduleMerge(EmojiCommon, exports);

export class Emoji extends EmojiCommon {
  [nameProperty.getDefault](): string {
    return '';
  }
  [nameProperty.setNative](value: string) {
    let emoji = EmojiDatabase.list().find((el) =&gt; el.shortname === value).codepoint[0];
    this.nativeView.setText(new java.lang.String(java.lang.Character.toChars(emoji)));
  }

  private _android: android.widget.TextView;

  get android() {
    return this.nativeView;
  }

  public createNativeView() {
    this._android = new android.widget.TextView(utils.ad.getApplicationContext());
    return this._android;
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>O primeiro passo √© extender a classe common criada anteriormente. Por se tratar de um plugin para interface, √© necess√°rio implementarmos o m√©todo <strong>createNativeView</strong>, que far√° com que o o NativeScript entenda que algum elemento tem de ser criado na View. No nosso caso criaremos um <a href="https://developer.android.com/reference/android/widget/TextView.html">TextView</a>.</p>
</div>
<div class="paragraph">
<p>E novamente aqui temos outra grande ajuda do framework, a equipe do NativeScript mapeou todas as propriedades e m√©todos nativos de cada plataforma e gerou as defini√ß√µes em TypeScript, o que nos da a possibilidade de navegar por todas estas defini√ß√µes nativas diretamente no editor.</p>
</div>
<div class="paragraph">
<p>Temos que definir tamb√©m o que o plugin far√° quando receber o atributo <strong>name</strong>, isso √© definido implementando o m√©todo <strong>setNative</strong>, que no nosso caso ir√° consultar o nome do emoji na base de dados, e com base no codigo correspondente, definira o valor para o TextView criado anteriormente. O metodo <strong>getDefault</strong> √© para casos em que nenhum valor seja definido.</p>
</div>
</div>
<div class="sect2">
<h3 id="_implementa_o_para_ios">Implementa√ß√£o para iOS</h3>
<div class="paragraph">
<p>Podemos copiar a mesma implementa√ß√£o feita para o Android, e alterar somente as partes onde √© criado e definido o valor para o elemento nativo, que no caso do iOS ser√°  o <a href="https://developer.apple.com/reference/uikit/uilabel">UILabel</a> ficando da seguinte maneira.</p>
</div>
<div class="paragraph">
<p><strong>emoji.ios.ts</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>import { nameProperty, EmojiCommon } from "./emoji.common";
import { EmojiDatabase } from "./emoji.database";

global.moduleMerge(EmojiCommon, exports);

export class Emoji extends EmojiCommon {
  [nameProperty.getDefault](): number {
    return 0;
  }
  [nameProperty.setNative](value: string) {
    let emoji = EmojiDatabase.list().find((el) =&gt; el.shortname === value).unicode;
    let nsString = NSString.stringWithString(emoji);
    this.nativeView.text = nsString;
  }

  private _ios: UILabel;

  get ios() {
    return this.nativeView;
  }

  public createNativeView() {
    this._ios = UILabel.alloc().init();
    return this._ios;
  }
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Novamente aqui ser√° possivel acessar a defini√ß√£o dos metodos nativos para iOS, no metodo <strong>createNativeView</strong> √© criado um UILabel e no m√©todo <strong>setNative</strong> √© definido o valor para o elemento criado.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_testando_o_plugin">Testando o plugin</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Sim, terminamos a implementa√ß√£o do plugin e o que resta agora √© apenas testarmos. Rapido n√£o? Para testarmos precisamos adicionar o plugin ao projeto <strong>demo</strong> criado nas etapas iniciais deste artigo. Para isso, √© necess√°rio executar o comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>npm run preparedemo</code></pre>
</div>
</div>
<div class="paragraph">
<p>Adicionar a referencia do elemento no elemento <strong>Page</strong> do arquivo <strong>main-page.xml</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>xmlns:Emoji="nativescript-emoji"</code></pre>
</div>
</div>
<div class="paragraph">
<p>e ent√£o adicionar o elemento no dentro do <strong>StackLayout</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>&lt;Emoji:Emoji name="joy" /&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Ficando da seguinte maneira.</p>
</div>
<div class="paragraph">
<p><strong>main-page.xml</strong></p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>&lt;Page xmlns="http://schemas.nativescript.org/tns.xsd" xmlns:Emoji="nativescript-emoji" navigatingTo="navigatingTo" class="page"&gt;

    &lt;Page.actionBar&gt;
        &lt;ActionBar title="NativeScript Emoji" icon="" class="action-bar"&gt;
        &lt;/ActionBar&gt;
    &lt;/Page.actionBar&gt;
    &lt;StackLayout orientation="horizontal"&gt;
        &lt;Label text="I'm happy "&gt; &lt;/Label&gt;
        &lt;Emoji:Emoji name="joy" /&gt;
        &lt;Emoji:Emoji name="joy" /&gt;
        &lt;Emoji:Emoji name="joy" /&gt;
    &lt;/StackLayout&gt;
&lt;/Page&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Agora resta executar o projeto de demonstra√ß√£o nos emuladores de cada plataforma executando os seguintes comandos.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code>nmm run demo.ios
npm run demo.android</code></pre>
</div>
</div>
<div class="paragraph">
<p><span class="image"><img src="https://raw.githubusercontent.com/dzfweb/nativescript-emoji/master/emojiprintscreen.png" alt="emojiprintscreen.png"></span></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_conclus_o">Conclus√£o</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Podemos ver como √© facil e rapido desenvolver um plugin para NativeScript, destaco alguns pontos como a comunidade de desenvolvedores NativeScript que s√£o bem participativos, a equipe da Telerik que a procura entregar a cada vers√£o ferramentas que vis√£o tornar nosso trabalho como desenvolvedor muito mais produtivo e lan√ßo o convite para voc√™ desenvolvedor que est√° lendo este artigo. Voc√™ desenvolveu algo customizado em algum projeto? Tem alguma ideia sobre alguma ferramenta que possa ser util? Contribua conosco tamb√©m.</p>
</div>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/05/22/Quao-Facil-e-criar-um-plugin-para-Native-Script.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/05/22/Quao-Facil-e-criar-um-plugin-para-Native-Script.html</guid><category><![CDATA[NativeScript]]></category><category><![CDATA[ plugin]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Mon, 22 May 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Navega√ß√£o com TabView]]></title><description><![CDATA[<div class="paragraph">
<p>Hoje vou mostrar um pouco como fazer uma navega√ß√£o usando TabView.
TabView √© aquela navega√ß√£o por abas que no iOS, por padr√£o, fica na parte inferior da view, enquanto no Android fica na parte superior.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://docs.nativescript.org/angular/code-samples/ui/img/tab-view-image.png" alt="tab view image.png">
</div>
</div>
<div class="paragraph">
<p>Aplicativos como o Twitter, Instagram e Facebook usam esse tipo de navega√ß√£o. √â bastante √∫til quando voc√™ quer uma navega√ß√£o r√°pida e sempre vis√≠vel.</p>
</div>
<div class="paragraph">
<p>A TabView √© criada usando as tags <strong>&lt;TabView&gt;&lt;/TabView&gt;</strong>. Dentro dela v√£o os itens, ou seja, as abas.
Veja nesse exemplo como √© simples:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;TabView&gt;
    &lt;StackLayout *tabItem="{title: 'Aba A', iconSource: '~/icone_a.png'}"&gt;
        &lt;Label text="Conte√∫do Aba A" color="green"&gt;&lt;/Label&gt;
    &lt;/StackLayout&gt;
    &lt;StackLayout *tabItem="{title: 'Aba B', iconSource: '~/icone_b.png'}"&gt;
        &lt;Label text="Conte√∫do Aba B" color="green"&gt;&lt;/Label&gt;
    &lt;/StackLayout&gt;
&lt;/TabView&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>O StackLayout foi s√≥ um exemplo, no lugar voc√™ pode usar qualquer um dos <a href="https://nativescriptbrasil.github.io/2017/03/19/ui-layouts-no-nativescript.html">tipos de layouts do NativeScript</a>. O importante √© ele ter o atributo que fala que aquele conte√∫do √© um item do TabView, o <em>tabItem</em>. Esse atributo recebe como valor um objeto, sendo que ele pode ter um t√≠tulo (<em>title</em>) e uma imagem (<em>iconSource</em>) como propriedades.
A imagem referente ao iconSource s√≥ √© exibida no iOS, no Android s√≥ o texto fica vis√≠vel.</p>
</div>
<div class="paragraph">
<p>Como podem ter percebido, a aba que vem selecionada por padr√£o, √© sempre a primeira, o que n√£o impede voc√™ mudar esse comportamento. Para fazer isso, √© s√≥ usar o atributo <em>selectedIndex</em>, na tag &lt;TabView&gt;, especificando o index da aba que voc√™ quer que venha selecionada. Vale lembrar que o index come√ßa no zero.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;TabView selectedIndex="1"&gt;
  ...
&lt;/TabView&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>E se voc√™ quiser mudar a cor de sele√ß√£o da aba? N√£o √© nada complicado, usando o atributo <em>selectedColor</em> voc√™ consegue fazer isso.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;TabView selectedIndex="1" selectedColor="#00FF00"&gt;
  ...
&lt;/TabView&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>Voc√™ pode querer executar uma a√ß√£o quando o usu√°rio seleciona uma das abas. Isso √© feito usando o evento <em>selectedIndexChanged</em>, tamb√©m na &lt;TabView&gt;.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;TabView selectedIndex="1" selectedColor="#00FF00" (selectedIndexChanged)="alterarAba($event)"&gt;
  ...
&lt;/TabView&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>E no .ts:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>public alterarAba(e: any) {
    console.log(e);
}</pre>
</div>
</div>
<div class="paragraph">
<p>Para p√°ginas (abas) com pouco conte√∫do, esse c√≥digo simples pode ser facilmente usado. O problema √© quando o conte√∫do das p√°ginas come√ßam a ficar grades, a ter listas, formul√°rios etc. Nesses casos, usar o TabView desse jeito vai deixar o seu c√≥digo muito dif√≠cil de dar manuten√ß√µes. Vai chegar uma hora que voc√™ n√£o vai mais entender o funcionamento das coisas.
O ideal √© deixar a p√°gina com a tabView o mais simples poss√≠vel e separar as p√°ginas que v√£o abrir em componentes. Sabendo que no Angular voc√™ define um seletor quando cria um componente, a sua TabView poderia ficar assim:</p>
</div>
<div class="paragraph">
<p>Arquivo aba-a.component.ts</p>
</div>
<div class="listingblock">
<div class="content">
<pre>@Component({
    selector: "aba-a",
    moduleId: module.id,
    templateUrl: "./aba-a.component.html",
})
export class AbaAComponent {}</pre>
</div>
</div>
<div class="paragraph">
<p>P√°gina com a tabView</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;TabView&gt;
    &lt;StackLayout *tabItem="{title: 'Aba A'}"&gt;
        &lt;aba-a&gt;&lt;/aba-a&gt;
    &lt;/StackLayout&gt;
    &lt;StackLayout *tabItem="{title: 'Aba B' }"&gt;
        &lt;Label text="Conte√∫do Aba B" color="green"&gt;&lt;/Label&gt;
    &lt;/StackLayout&gt;
&lt;/TabView&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>Repare que eu posso tanto usar um conte√∫do de compomente, como tamb√©m posso usar o conte√∫do direto na p√°gina, vai depender de como voc√™ quer organizar o seu c√≥digo.
Eu acho mais organizado deixar tudo em arquivos separados, mesmo quando o conte√∫do √© pequeno.</p>
</div>
<div class="paragraph">
<p>Por hoje √© isso. O c√≥digo √© simples mas bastante √∫til.</p>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/05/01/navegacao-com-tabview.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/05/01/navegacao-com-tabview.html</guid><category><![CDATA[UI]]></category><category><![CDATA[ Navega√ß√£o]]></category><category><![CDATA[ Layout]]></category><dc:creator><![CDATA[Alex Hiroshi]]></dc:creator><pubDate>Mon, 01 May 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Imers√£o NativeScript #2 - Criando um novo projeto NativeScript com Angular 2]]></title><description><![CDATA[<div class="paragraph">
<p>Fala pessoal, compartilho com voc√™s uma video aula parte do curso NativeScript com Angular 2 que estou gravando.</p>
</div>
<div class="videoblock">
<div class="content">
<iframe src="https://www.youtube.com/embed/2yZAKoMIv3Y?rel=0" frameborder="0" allowfullscreen></iframe>
</div>
</div>
<div class="paragraph">
<p>O curso completo contar√° com aproximadamente 20 aulas, em breve trarei mais informa√ß√µes. Deixe seu comentario com sugest√£o, duvidas e temas que voc√™ gostaria que fosse discutido nas aulas.</p>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/04/21/criando-novo-projeto-nativescript-com-angular-2.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/04/21/criando-novo-projeto-nativescript-com-angular-2.html</guid><category><![CDATA[NativeScript]]></category><category><![CDATA[ Angular2]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Fri, 21 Apr 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[UI Layouts no NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Se voc√™ est√° come√ßando agora a mexer com NativeScript, √© bom entender o que √© poss√≠vel fazer na parte visual, no UI do aplicativo.</p>
</div>
<div class="paragraph">
<p>Aproveitando, n√£o deixe de ler o primeiro artigo de <a href="https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html">Imers√£o NativeScript</a> que o Douglas est√° escrevendo.</p>
</div>
<div class="paragraph">
<p>O NativeScript possui 6 tipos de layouts predefinidos que vai ajudar a organizar o visual do seu aplicativo. Esses layouts, na verdade, s√£o marca√ß√µes inseridas no html dos componentes de um aplicativo, e tamb√©m podem ser criados usando os m√≥dulos de cada um diretamente no componente (no arquivo js ou ts).</p>
</div>
<div class="paragraph">
<p>Aqui vou mostrar exemplos de escrita no HTML, que √© mais comum.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_stacklayout">StackLayout</h3>
<div class="paragraph">
<p>Talvez esse seja o que layout que ser√° mais usado. Ele faz o b√°sico, que √© colocar em pilha (stack) os elementos na view, ou seja, se voc√™ precisa mostrar elementos um embaixo do outro, como campos de formul√°rio, esse √© o layout que dever√° ser utilizado.</p>
</div>
<div class="paragraph">
<p>Para quem vem do HTML e CSS, podemos dizer que √© como deixar todos os elementos dentro do container com um <strong>display:block</strong>.
√â poss√≠vel usar um atributo <em>orientation</em> para organizar os elementos na horizontal. Basta atribuir o valor do atributo para <em>horizontal</em>.
Um exemplo:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;StackLayout&gt;
    &lt;Label text="Nome" /&gt;
    &lt;TextField hint="Digite o nome" /&gt;
    &lt;Label text="E-mail" /&gt;
    &lt;TextField hint="Digite o e-mail" /&gt;
&lt;/StackLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_gridlayout">GridLayout</h3>
<div class="paragraph">
<p>Define √°reas em colunas e linhas, ou seja, na tag GridLayout voc√™ define <em>columns</em> e <em>rows</em> em que os elementos internos ir√£o se posicionar. Em cada elemento, √© adicionado um atributo <em>col</em> e/ou <em>row</em> para deixar o elemento no lugar certo.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;GridLayout columns="60, auto" rows="auto, *" &gt;
    &lt;Label text="Coluna 0 - Linha 0" col="0" /&gt;
    &lt;Label text="Coluna 1 - Linha 0" col="1" /&gt;
    &lt;Label text="Coluna 0 - Linha 1" col="0" row="1" /&gt;
    &lt;Label text="Coluna 1 - Linha 1" col="1" row="1" /&gt;
&lt;/GridLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_wraplayout">WrapLayout</h3>
<div class="paragraph">
<p>Esse layout posiciona os elementos internos em colunas ou linhas, dependendo da defini√ß√£o da propriedade orientation, que pode ser <em>vertical</em> ou <em>horizontal</em>, por padr√£o o valor √© <em>horizontal</em>.</p>
</div>
<div class="paragraph">
<p>O WrapLayout lembra um pouco o StackLayout, posicionando elementos na horizontal ou vertical. A diferen√ßa √© que o StackLayout n√£o faz quebras de linhas ou colunas. O WrapLayout, quando tem a propriedade <em>orientation</em> como <em>horizontal</em>, quebra a linha quando o elemento n√£o cabe mais na tela. Se a propriedade estiver com o valor <em>vertical</em>, ele cria colunas quando o elemento chega no final da tela.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;WrapLayout orientation="vertical"&gt;
    &lt;Label text="Elemento 1" /&gt;
    &lt;Label text="Elemento 2" /&gt;
    &lt;Label text="Elemento 3" /&gt;
    &lt;Label text="Elemento 4" /&gt;
    &lt;Label text="Elemento 5" /&gt;
    &lt;Label text="Elemento 6" /&gt;
    &lt;Label text="Elemento 7" /&gt;
    &lt;Label text="Elemento 8" /&gt;
    &lt;Label text="Elemento 9" /&gt;
&lt;/WrapLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_docklayout">DockLayout</h3>
<div class="paragraph">
<p>Esse layout posiciona os elementos internos nas bordas do DockLayout. Para isso, cada elemento recebe um atributo dock, que pode ter os valores <em>top, right, bottom e left</em>. Voc√™ pode adicionar um elemento sem o atributo dock e ele ficar√° posicionado no espa√ßo que sobrar no meio do layout.</p>
</div>
<div class="paragraph">
<p>Caso queira que o √∫ltimo elemento ocupe todo o espa√ßo restante, existe a propriedade <em>stretchLastChild</em> para a tag DockLayout. Essa propriedade recebe um valor true/false. Se true, ele vai pegar o √∫ltimo elemento e esticar at√© ocupar o espa√ßo vazio.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;DockLayout stretchLastChild="true"&gt;
    &lt;Button dock="left" text="1" style="background-color: red; margin: 5;" /&gt;
    &lt;Button dock="top" text="2" style="background-color: green; margin: 5;" /&gt;
    &lt;Button dock="right" text="3" style="background-color: blue; margin: 5;" /&gt;
    &lt;Button dock="bottom" text="4" style="background-color: yellow; margin: 5;" /&gt;
    &lt;Button text="ocupa espa√ßo" style="background-color: black; margin: 5;" /&gt;
&lt;/DockLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_absolutelayout">AbsoluteLayout</h3>
<div class="paragraph">
<p>Fazendo uma analogia com o CSS, √© como fosse usado o <strong>position:absolute</strong> nos elementos internos. Bem simples, cada elemento interno recebe os atributos <em>left</em> e <em>top</em>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>&lt;AbsoluteLayout&gt;
    &lt;Label text="Posi√ß√£o 0 left e 70 top" left="0" top="70" /&gt;
    &lt;Label text="Posi√ß√£o 10 left e 100 top" left="10" top="100" /&gt;
&lt;/AbsoluteLayout&gt;</pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_flexboxlayout">FlexboxLayout</h3>
<div class="paragraph">
<p>O layout FlexboxLayout merece um post para falar sobre ele. Basicamente, ele funciona como o <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS flexbox</a>. A documenta√ß√£o no NativeScript deixar at√© como refer√™ncia <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">esse link</a>, porque eles traduzem as propriedades do CSS para propriedades que funcionam em um c√≥digo xml ou js do NativeScript.</p>
</div>
<div class="paragraph">
<p>A tag FlexboxLayout √© como se fosse um div com <strong>display:flex</strong>. Ent√£o, nos elementos internos, voc√™ precisa definir os espa√ßos, as colunas, o posicionamento, como se fosse no css.</p>
</div>
</div>
<div class="sect1">
<h2 id="_propriedades">Propriedades</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Para finalizar, todas essas tags de layouts possuem algumas propriedades:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>width</p>
</li>
<li>
<p>height</p>
</li>
<li>
<p>minWidth</p>
</li>
<li>
<p>minHeight</p>
</li>
<li>
<p>visibility</p>
</li>
<li>
<p>marginTop</p>
</li>
<li>
<p>marginRight</p>
</li>
<li>
<p>marginBottom</p>
</li>
<li>
<p>marginLeft</p>
</li>
<li>
<p>horizontalAlignment</p>
</li>
<li>
<p>verticalAlignment</p>
</li>
</ul>
</div>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/19/ui-layouts-no-nativescript.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/19/ui-layouts-no-nativescript.html</guid><category><![CDATA[Layout]]></category><category><![CDATA[ UI]]></category><dc:creator><![CDATA[Alex Hiroshi]]></dc:creator><pubDate>Sun, 19 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Imers√£o NativeScript #1 - Instalando o NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Este √© o primeiro de uma s√©rie de artigos que irei lan√ßar nas pr√≥ximas semanas onde irei abordar a cria√ß√£o de um projeto em NativeScript com Angular 2 desde o inicio, desde a instala√ß√£o, cria√ß√£o, melhores pr√°ticas e muito mais.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_instalando_nativescript">Instalando NativeScript</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_windows">Windows</h3>
<div class="paragraph">
<p>Se voc√™ estiver no Windows, voc√™ pode optar por utilizar o instalador oficial do <strong>NativeScript</strong> atrav√©z o seguinte link:
<a href="https://docs.nativescript.org/start/ns-setup-installer" class="bare">https://docs.nativescript.org/start/ns-setup-installer</a></p>
</div>
<div class="paragraph">
<p>O instalador ir√° realizar toda a configura√ß√£o do ambiente necess√°ria para desenvolvimento com Android (j√° que para desenvolver para iOS voc√™ precisa de um Mac). Se preferir, voc√™ pode acessar o guia avan√ßado de instala√ß√£o para Windows <a href="https://docs.nativescript.org/start/ns-setup-win">clicando aqui</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_mac">Mac</h3>
<div class="ulist">
<ul>
<li>
<p>Instale o Node:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>brew install node</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o NativeScript:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install -g nativescript</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configurar o Android e iOS SDK</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Agora precisamos configurar o ambiente para desenvolver para Android e iOS. Existe um script oficial da Telerik onde √© realizada a instala√ß√£o completa executando o seguinte comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>ruby -e "$(curl -fsSL https://www.nativescript.org/setup/mac)"</pre>
</div>
</div>
<div class="paragraph">
<p>O processo de instala√ß√£o pode demorar alguns minutos, seja paciente. Se preferir, voc√™ pode consultar o <a href="https://docs.nativescript.org/start/ns-setup-os-x">manual de instala√ß√£o completo para macOS clicando aqui.</a></p>
</div>
</div>
<div class="sect2">
<h3 id="_linux">Linux</h3>
<div class="ulist">
<ul>
<li>
<p>Instale o node:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0 libstdc++6:i386</pre>
</div>
</div>
<div class="paragraph">
<p>se o comando anterior estourar o erro <code>Unable to locate package lib32bz2-1.0</code>, ent√£o use este comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install lib32z1 lib32ncurses5 libbz2-1.0:i386 libstdc++6:i386</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o G++ compiler:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install g++</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o JDK 8:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo apt-get install python-software-properties
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configure o JAVA:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo update-alternatives --config java</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Configure a variavel de ambiente <strong>JAVA_HOME</strong></p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>export JAVA_HOME=$(update-alternatives --query javac | sed -n -e 's/Best: *\(.*\)\/bin\/javac/\1/p')</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o Android SDK
Acesse o link abaixo, navegue at√© a se√ß√£o de downloads para linux e realize o download:
<a href="https://developer.android.com/sdk/index.html#Other" class="bare">https://developer.android.com/sdk/index.html#Other</a></p>
</li>
<li>
<p>Configure a variavel de ambiente <strong>ANDROID_HOME</strong>
Ap√≥s a instala√ß√£o do Android SDK, execute o comando:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>export ANDROID_HOME=Path to Android installation directory</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale os pacotes necessarios para o ambiente de desenvolvimento Android:</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo $ANDROID_HOME/tools/android update sdk --filter tools,platform-tools,android-23,build-tools-23.0.3,extra-android-m2repository,extra-google-m2repository,extra-android-support --all --no-ui</pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>Instale o CLI do NativeScript</p>
</li>
</ul>
</div>
<div class="listingblock">
<div class="content">
<pre>sudo npm install nativescript -g --unsafe-perm</pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_verificando_o_status_da_instala_o">Verificando o status da Instala√ß√£o</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Ap√≥s a instala√ß√£o do NativeScript, voc√™ ter√° acesso ao CLI (command line interface). Confira se tudo esta certo executando o seguinte comando:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>tns doctor</pre>
</div>
</div>
<div class="paragraph">
<p>o resultado dever√° ser o seguinte:</p>
</div>
<div class="listingblock">
<div class="content">
<pre>Œª tns doctor

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Component    ‚îÇ Current version ‚îÇ Latest version ‚îÇ Information      ‚îÇ
‚îÇ nativescript ‚îÇ 2.5.1           ‚îÇ 2.5.2          ‚îÇ Update available ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò</pre>
</div>
</div>
<div class="sect2">
<h3 id="_pr_ximos_passos">Pr√≥ximos passos</h3>
<div class="paragraph">
<p>Agora que voc√™ tem um ambiente configurado, voc√™ est√° apto a desenvolver em NativeScript utilizando JavaScript, TypeScript ou Angular 2.
Na pr√≥ximo artigo irei iniciar um projeto do zero em Angular 2 e iremos abordar diversos temas sobre o <strong>NativeScript</strong>.</p>
</div>
</div>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/14/instalando-nativescript.html</guid><category><![CDATA[Curso]]></category><category><![CDATA[ NativeScript]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Tue, 14 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[10 motivos para optar por NativeScript]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Apesar de novo, o <a href="http://nativescript.org/">framework</a> vem demonstrando sua for√ßa a cada atualiza√ß√£o. Nesse artigo demonstro algumas motivos de porque escolhe-lo.</p>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_1_open_source">1: Open Source</h3>
<div class="paragraph">
<p>N√£o poderia come√ßar por outro ponto que n√£o este. O <strong>NativeScript</strong> √© totalmente open source, o reposit√≥rio do projeto pode ser acessado atrav√©z o link <a href="https://github.com/NativeScript" class="bare">https://github.com/NativeScript</a>. O projeto possui uma comunidade muito ativa, por diversas vezes que precisei abrir uma issue, em poucas horas obtive respostas de membros da propria equipe do projeto, bem como demais usu√°rios.</p>
</div>
</div>
<div class="sect2">
<h3 id="_2_mantido_pela_telerik">2: Mantido pela Telerik</h3>
<div class="imageblock">
<div class="content">
<img src="http://lrdnug.org/images/logos/telerik_new-logo.png" alt="telerik new logo.png">
</div>
</div>
<div class="paragraph">
<p>Esse foi um dos motivos que me levou a escolher o <strong>NativeScript</strong> quando estava estudando sobre frameworks para desenvolvimento de aplicativos m√≥veis: <em>Ser mantido pela Telerik</em>. Telerik √© uma empresa b√∫lgara criada em 2002 e se destaca por desenvolver ferramentas poderosas para desenvolvedores, como Fiddler, Telerik Reporting, JustCode, Kendo UI, entre outros. Ferramentas estas que n√£o s√£o acess√≠veis para todos, pois possuem licen√ßas car√≠ssimas, entretanto para o <strong>NativeScript</strong>, eles adotaram uma maneira de monetizar o neg√≥cio diferente, a exemplo do que vem fazendo a Microsoft com seus produtos, a Telerik oferece o <strong>NativeScript</strong> totalmente gratuito, e caso voc√™ desejar, pode contar com um suporte t√©cnico da empresa e ferramentas exclusivas como o <strong>NativeScript-UI</strong> (componentes extras para interfaces) adquirindo uma licen√ßa premium.</p>
</div>
</div>
<div class="sect2">
<h3 id="_3_web_skills_javascript_e_css">3: Web Skills: JavaScript e CSS</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.ibb.co/hcbXwF/Screenshot_90.png" alt="Screenshot 90.png">
</div>
</div>
<div class="paragraph">
<p>Ao iniciar um projeto em <strong>NativeScript</strong> voc√™ tem a op√ß√£o de escolher 3 arquiteturas para o projeto: <strong>JavaScript</strong>, <strong>TypeScript</strong> ou <strong>Angular2</strong>. Al√©m disso, voc√™ poder√° contar com o <strong>CSS</strong> para a interface. N√£o s√£o todas as propriedades do CSS que temos ao desenvolver para web, at√© por que n√£o temos DOM para manipular j√° que s√£o elementos puramente nativos, voc√™ pode acessar a lista completa <a href="https://docs.nativescript.org/ui/styling#supported-css-properties">clicando aqui</a>. De modo geral, voc√™ ir√° reaproveitar todo seu conhecimento em desenvolvimento para web, ao desenvolver com <strong>NativeScript</strong>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_4_multi_plataforma">4: Multi-plataforma</h3>
<div class="imageblock">
<div class="content">
<img src="https://adtmag.com/~/media/ECG/redmondmag/Images/introimages/REDMackie0613AndroidiOS_v2.jpg" alt="REDMackie0613AndroidiOS v2.jpg">
</div>
</div>
<div class="paragraph">
<p>Um dos slogans do <strong>NativeScript</strong> √© <em>"write once, run everywhere"</em> (escreva uma vez, rode em qualquer lugar). Com o <strong>NativeScript</strong> voc√™ ter√° um unico projeto escrito em JavaScript servindo diferentes plataformas (Android e iOS).</p>
</div>
</div>
<div class="sect2">
<h3 id="_5_componentes_nativos">5: Componentes nativos</h3>
<div class="imageblock">
<div class="content">
<img src="http://www.hybridtonative.com/images/nativescript-theme.png" alt="nativescript theme.png">
</div>
</div>
<div class="paragraph">
<p>As interfaces do <strong>NativeScript</strong> s√£o escritas em XML, n√£o temos HTML, n√£o h√° DOM, o NativeScript entrega para voc√™ componentes realmente nativos, por conta disso o ganho em performance √© elevado em compara√ß√£o a outros frameworks</p>
</div>
</div>
<div class="sect2">
<h3 id="_6_sem_compila_o">6: Sem compila√ß√£o</h3>
<div class="imageblock">
<div class="content">
<img src="https://superdevresources.com/wp-content/uploads/2014/06/cross-platform-app-development-telerik-nativescript.png" alt="cross platform app development telerik nativescript.png">
</div>
</div>
<div class="paragraph">
<p>O <strong>NativeScript</strong> n√£o compila nenhum c√≥digo. O c√≥digo que voc√™ escreve em JavaScript √© entregue integralmente no dispositivo. O <strong>NativeScript</strong> lhe da acesso integral a VM JavaScript do dispositivo (V8 no android e JavaScriptCore no iOS). Por conta disso, desenvolver em <strong>NativeScript</strong> se torna muito mais atrativo, pois voc√™ tem um ambiente mais fluido, sem pausas para recompilar, e tamb√©m gra√ßas ao <strong>livesync</strong> que voc√™ pode utilizar enquanto est√° desenvolvendo, onde o aplicativo √© atualizado automaticamente a cada mudan√ßa no c√≥digo. Falarei mais sobre esse assunto em outra oportunidade.</p>
</div>
</div>
<div class="sect2">
<h3 id="_7_vasta_op_es_de_pacotes">7: Vasta op√ß√µes de pacotes</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.ibb.co/gHEViv/npmcocoapodgradle.png" alt="npmcocoapodgradle.png">
</div>
</div>
<div class="paragraph">
<p>Voc√™ poder√° utilizar a maioria dos pacotes NPM que voc√™ ja utiliza para desenvolver para web, tamb√©m no <strong>NativeScript</strong> (desde que este n√£o dependa de DOM). No momento em que escrevo esse artigo existem cerca de 466 pacotes exclusivos para <strong>NativeScript</strong> no <a href="https://www.npmjs.com/search?q=nativescript">reposit√≥rio NPM</a>. E n√£o √© s√≥ isso, caso voc√™
deseje, poder√° utilizar tamb√©m pacotes dos reposit√≥rios cocoapods e gradle, e reaproveitar pacotes nativos de cada plataforma, tamb√©m no <strong>NativeScript</strong>. Isso √© muito √∫til para quem ja desenvolve apps em JAVA ou Object-C e j√° tenha experi√™ncia com alguns pacotes em cada plataforma.</p>
</div>
</div>
<div class="sect2">
<h3 id="_8_depura_o_de_c_digo">8: Depura√ß√£o de C√≥digo</h3>
<div class="imageblock">
<div class="content">
<img src="https://i.ytimg.com/vi/KQHJewS3tqA/maxresdefault.jpg" alt="maxresdefault.jpg">
</div>
</div>
<div class="paragraph">
<p>O <strong>NativeScript</strong> possui extens√µes para o Visual Studio Code, Web Storm para debugar o c√≥digo durante o desenvolvimento. E na ultima atualiza√ß√£o (vers√£o 2.5.0) foi entregue suporte para utilizar o Chrome Developer Tools para debugar tamb√©m. Isso tornar√° o ambiente de desenvolvimento mais produtivo.</p>
</div>
</div>
<div class="sect2">
<h3 id="_9_100_de_acesso_as_api_s_nativas">9: 100% de acesso as API&#8217;s nativas</h3>
<div class="imageblock">
<div class="content">
<img src="https://image.slidesharecdn.com/nativescriptlondonmobiledev-150109075452-conversion-gate02/95/native-script-by-sebastian-witalec-8-638.jpg?cb=1420811743" alt="native script by sebastian witalec 8 638.jpg?cb=1420811743">
</div>
</div>
<div class="paragraph">
<p>Esse sem sombra de d√∫vidas √© o que faz com que o <strong>NativeScript</strong> se destaque perante os concorrentes. Tanto no ReactNative como no Xamarin por exemplo, voc√™ tem acesso limitado as API&#8217;s nativas, o que esses frameworks fazem √© encapsular a API nativa, uma por uma, e te entregar o acesso atrav√©z o c√≥digo o framework, como um atalho. No <strong>NativeScript</strong> isso n√£o ocorre, voc√™ tem acesso integral a API do dispositivo, como uma ponte direta a engine. Voc√™ n√£o precisa escrever JAVA ou Object-C, voc√™ tem acesso integral atrav√©z JavaScript. Outro ponto positivo em ter acesso direto a API do dispositivo, √© em quest√£o de atualiza√ß√µes. Se o Android lan√ßar uma SDK nova por exemplo, voc√™ poder√° utilizar sem maiores dificuldades, bastanto apenas atualizar sua suite de desenvolvimento, no caso do Xamarin ou ReactNative, voc√™ teria que esperar sair uma atualiza√ß√£o do framework.</p>
</div>
</div>
<div class="sect2">
<h3 id="_10_atualiza_es_frequentes_muita_novidade">10: Atualiza√ß√µes frequentes, muita novidade</h3>
<div class="imageblock">
<div class="content">
<img src="http://www.heliosdesign.co.za/export/sites/helios/blog/images3/update-frequently.jpg" alt="update frequently.jpg">
</div>
</div>
<div class="paragraph">
<p>Se voc√™ acompanhar o projeto no <a href="https://github.com/nativescript/">github</a> ver√° que a equipe de desenvolvimento n√£o para. √â atualiza√ß√£o atraz de atualiza√ß√£o, a vers√£o <a href="https://www.nativescript.org/blog/nativescript-25-is-now-available">2.5.0</a> mal foi entregue, recheada de recursos novos e melhorias, e a Telerik j√° soltou not√≠cias de um <a href="https://www.nativescript.org/blog/sneak-preview-of-nativescript-3.0"><em>major update</em> para 3.0</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="_destaques_da_ltima_vers_o">Destaques da √∫ltima vers√£o</h3>
<div class="ulist">
<ul>
<li>
<p>Suporte para o Chrome Developer Tools</p>
</li>
<li>
<p>Melhorias no CLI</p>
</li>
<li>
<p>Atualiza√ß√£o na extens√£o para Visual Studio Code</p>
</li>
<li>
<p><a href="http://www.telerik.com/nativescript-ui">Novos componentes no NativeScript UI</a></p>
</li>
<li>
<p><a href="https://webpack.github.io/">Suporte ao Webpack Module Bundler</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="_o_que_vem_por_ai">O que vem por ai</h3>
<div class="paragraph">
<p>Muito rumor ainda paira sobre a vers√£o 3.0, mas a equipe Telerik j√° deu algumas dicas de que vem coisa grande por ai. Est√£o reestruturando a arquitetura do NativeScript para torna-lo ainda mais rapido, em alguns testes <a href="https://www.nativescript.org/blog/sneak-preview-of-nativescript-3.0">resultaram em um ganho de performance de at√© 400%</a>, e n√£o √© s√≥ isso, est√£o ampliando o acesso as funcionalidades do Chrome Dev Tools, melhorias no minificador WebPack e um instalador novo para quem n√£o se sentir confortavel em usar linha de comando.</p>
</div>
</div>
<div class="sect2">
<h3 id="_conclus_o">Conclus√£o</h3>
<div class="paragraph">
<p>O objetivo desse artigo foi fazer um panorama sobre o NativeScript e seus benef√≠cios. A curva de aprendizado √© baix√≠ssima, visto que voc√™ reaproveitar√° grande parte do seu conhecimento em desenvolvimento para Web.
Nas pr√≥ximas semanas irei lan√ßar conte√∫dos sobre o <strong>NativeScript</strong> e espero que possamos juntos enriquecer esse portal com material de qualidade para todos os n√≠veis.</p>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/11/Por-que-escolher-Native-Script.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/11/Por-que-escolher-Native-Script.html</guid><category><![CDATA[Blog]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[NativeScript Brasil]]></title><description><![CDATA[<div class="sect2">
<h3 id="_comunidade_brasileira_sobre_nativescript">Comunidade brasileira sobre NativeScript.</h3>
<div class="paragraph">
<p>Grupo criado com o intuito de reunir artigos, materiais e projetos sobre NativeScript para a comunicade de desenvolvedores brasileiros.</p>
</div>
<div class="paragraph">
<p>Em breve novidades, acompanhe-nos nas redes sociais:</p>
</div>
<div class="paragraph">
<p><a href="https://www.facebook.com/groups/nativescriptbrasil/?ref=br_rs">Facebook</a></p>
</div>
<div class="paragraph">
<p><a href="https://www.youtube.com/channel/UChXJEo5jpog58CvymfAJgMQ">Youtube</a></p>
</div>
<div class="paragraph">
<p><a href="https://github.com/NativeScriptBrasil">Github</a></p>
</div>
</div>]]></description><link>https://nativescriptbrasil.github.io/2017/03/10/Native-Script-Brasil.html</link><guid isPermaLink="true">https://nativescriptbrasil.github.io/2017/03/10/Native-Script-Brasil.html</guid><category><![CDATA[NativeScript]]></category><category><![CDATA[ Blog]]></category><category><![CDATA[ Novidades]]></category><dc:creator><![CDATA[Douglas Franco]]></dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 GMT</pubDate></item></channel></rss>